import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_BeKtFF-M.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<p><strong>Explorando Arrays y Objetos en JavaScript: Desglose Pr√°ctico y M√©todos de Recorrido y Modificaci√≥n</strong></p>\n<p>En esta ocasi√≥n veremos que son los arrays y objetos en JavaScript, explorando m√©todos para acceder a √≠ndices, recorrer, y modificar estas estructuras de datos vitales.</p>\n<p><img src=\"/img/img_blog/arrays.webp\" alt=\"portada\"></p>\n<h3 id=\"arrays-conjuntos-ordenados-de-datos\"><strong>Arrays: Conjuntos Ordenados de Datos</strong></h3>\n<p>Si una variable es como una cajita d√≥nde podemos almacenar un valor, el array se podr√≠a imaginar como un cofre en el c√∫al podemos almacenar conjuntos de datos que podemos manipular y explorar. Otra forma de entenderlos es como una canasta llena de frrutras:üçé,üçå,üçì.</p>\n<h4 id=\"acceder-a-elementos-y-longitud-de-un-array\"><strong>Acceder a Elementos y Longitud de un Array</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Crear un array de frutas</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> frutas</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#BBBBBB\"> [</span><span style=\"color:#FF8B39\">'Manzana'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF8B39\">'Banana'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF8B39\">'Fresa'</span><span style=\"color:#BBBBBB\">];</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Acceder al primer elemento</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">[</span><span style=\"color:#2EE2FA\">0</span><span style=\"color:#BBBBBB\">]); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: Manzana</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Acceder a la longitud del array</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#FF7EDB\">length</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: 3</span></span>\n<span class=\"line\"></span></code></pre>\n<p>En este ejemplo, hemos creado un array de frutas y accedido al primer elemento y a la longitud del array.</p>\n<h4 id=\"modificar-y-a√±adir-elementos\"><strong>Modificar y A√±adir Elementos</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Modificar un elemento existente</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">[</span><span style=\"color:#2EE2FA\">1</span><span style=\"color:#BBBBBB\">] </span><span style=\"color:#FFFFFFEE\">=</span><span style=\"color:#FF8B39\"> 'Uva'</span><span style=\"color:#BBBBBB\">; </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el array es ['Manzana', 'Uva', 'Fresa']</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// A√±adir un nuevo elemento al final</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">push</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">'Pi√±a'</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el array es ['Manzana', 'Uva', 'Fresa', 'Pi√±a']</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Hemos modificado un elemento existente y a√±adido uno nuevo al final del array utilizando los m√©todos de acceso y modificaci√≥n.</p>\n<h4 id=\"eliminar-elementos\"><strong>Eliminar Elementos</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Eliminar el √∫ltimo elemento</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">pop</span><span style=\"color:#BBBBBB\">(); </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el array es ['Manzana', 'Uva', 'Fresa']</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Eliminar el primer elemento</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">shift</span><span style=\"color:#BBBBBB\">(); </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el array es ['Uva', 'Fresa']</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Con <code>pop</code> y <code>shift</code>, hemos eliminado el √∫ltimo y primer elemento del array, respectivamente.</p>\n<h4 id=\"m√©todo-foreach-explorando-cada-elemento-del-array\"><strong>M√©todo forEach: Explorando cada Elemento del Array</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Utilizar forEach para imprimir cada fruta</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">forEach</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB;font-style:italic\">fruta</span><span style=\"color:#FEDE5D\"> =></span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">fruta</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">});</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Con <code>forEach</code>, hemos recorrido y explorado cada elemento del array, imprimiendo cada fruta.</p>\n<h4 id=\"m√©todo-map-transformar-cada-elemento-del-array\"><strong>M√©todo map: Transformar cada Elemento del Array</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Crear un nuevo array con longitudes de cada fruta</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> longitudesFrutas</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF7EDB\"> frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">map</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB;font-style:italic\">fruta</span><span style=\"color:#FEDE5D\"> =></span><span style=\"color:#FF7EDB\"> fruta</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#FF7EDB\">length</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">longitudesFrutas</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: [4, 5]</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Con <code>map</code>, hemos creado un nuevo array transformando cada fruta en su longitud.</p>\n<h4 id=\"m√©todo-filter-filtrar-elementos-basados-en-una-condici√≥n\"><strong>M√©todo filter: Filtrar Elementos basados en una Condici√≥n</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Crear un nuevo array con frutas que tienen m√°s de 3 letras</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> frutasLargas</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF7EDB\"> frutas</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">filter</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB;font-style:italic\">fruta</span><span style=\"color:#FEDE5D\"> =></span><span style=\"color:#FF7EDB\"> fruta</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#FF7EDB\">length</span><span style=\"color:#FEDE5D\"> ></span><span style=\"color:#2EE2FA\"> 3</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">frutasLargas</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: ['Uva', 'Fresa']</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Mediante <code>filter</code>, hemos obtenido un nuevo array con frutas que tienen m√°s de 3 letras.</p>\n<h3 id=\"objetos-almacenando-datos-con-clave-valor\"><strong>Objetos: Almacenando Datos con Clave-Valor</strong></h3>\n<p>Los objetos en JavaScript nos permiten almacenar datos de manera estructurada utilizando claves √∫nicas.</p>\n<h4 id=\"acceder-a-propiedades-y-a√±adir-nuevas\"><strong>Acceder a Propiedades y A√±adir Nuevas</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Crear un objeto de persona</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> persona</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  nombre</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#FF8B39\"> 'Juan'</span><span style=\"color:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  edad</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#2EE2FA\"> 25</span><span style=\"color:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  ciudad</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#FF8B39\"> 'Barcelona'</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Acceder a la edad</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#2EE2FA\">edad</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: 25</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// A√±adir una nueva propiedad</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#2EE2FA\">trabajo</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF8B39\"> 'Desarrollador'</span><span style=\"color:#BBBBBB\">; </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el objeto tiene una nueva propiedad</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Con los objetos, hemos accedido a una propiedad existente y a√±adido una nueva propiedad al objeto.</p>\n<h4 id=\"modificar-y-eliminar-propiedades\"><strong>Modificar y Eliminar Propiedades</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Modificar el valor de una propiedad existente</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#2EE2FA\">edad</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#2EE2FA\"> 26</span><span style=\"color:#BBBBBB\">; </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, la edad es 26</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Eliminar una propiedad</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">delete</span><span style=\"color:#FF7EDB\"> persona</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#2EE2FA\">ciudad</span><span style=\"color:#BBBBBB\">; </span><span style=\"color:#848BBD;font-style:italic\">// Ahora, el objeto no tiene la propiedad \"ciudad\"</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Hemos modificado el valor de una propiedad y eliminado otra del objeto utilizando m√©todos espec√≠ficos.</p>\n<h4 id=\"m√©todo-objectkeys-obtener-las-claves-del-objeto\"><strong>M√©todo Object.keys: Obtener las Claves del Objeto</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Obtener las claves del objeto</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> clavesPersona</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF7EDB\"> Object</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">keys</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">clavesPersona</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: ['nombre', 'edad', 'trabajo']</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Mediante <code>Object.keys</code>, hemos obtenido un array con las claves del objeto <code>persona</code>.</p>\n<h4 id=\"m√©todo-objectvalues-obtener-los-valores-del-objeto\"><strong>M√©todo Object.values: Obtener los Valores del Objeto</strong></h4>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Obtener los valores del objeto persona</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> valoresPersona</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF7EDB\"> Object</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">values</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">valoresPersona</span><span style=\"color:#BBBBBB\">); </span><span style=\"color:#848BBD;font-style:italic\">// Salida: ['Juan', 26, 'Desarrollador']</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Con <code>Object.values</code>, hemos obtenido un array con los valores del objeto <code>persona</code>.</p>\n<h3 id=\"ejercicio-pr√°ctico-aplicando-m√©todos-de-recorrido-y-modificaci√≥n\"><strong>Ejercicio Pr√°ctico: Aplicando M√©todos de Recorrido y Modificaci√≥n</strong></h3>\n<p>Vamos a combinar todos estos conceptos en un ejercicio:</p>\n<p><strong>Ejercicio:</strong> Crea un array de frutas y un objeto de persona. Utiliza al menos tres m√©todos diferentes para modificar el array y el objeto, como a√±adir nuevas frutas, cambiar la edad de la persona y eliminar una propiedad del objeto.</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Ejercicio: Agrega nuevasFrutas al array de frutas</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> frutas</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#BBBBBB\"> [</span><span style=\"color:#FF8B39\">'Manzana'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF8B39\">'Uva'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF8B39\">'Fresa'</span><span style=\"color:#BBBBBB\">];</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> nuevasFrutas</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#BBBBBB\"> [</span><span style=\"color:#FF8B39\">'Kiwi'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF8B39\">'Melocot√≥n'</span><span style=\"color:#BBBBBB\">];</span></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">  // Tu c√≥digo aqu√≠: Utiliza m√©todos como push.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">//Edita la edad de Ana, a 31 a√±os</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">const</span><span style=\"color:#FF7EDB\"> persona</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  nombre</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#FF8B39\"> 'Ana'</span><span style=\"color:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  edad</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#2EE2FA\"> 30</span><span style=\"color:#BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  ciudad</span><span style=\"color:#B6B1B1\">:</span><span style=\"color:#FF8B39\"> 'Madrid'</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">};</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Tu c√≥digo aqu√≠:</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#848BBD;font-style:italic\">// Imprimir resultados</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">'Frutas:'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF7EDB\">frutas</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">'Edad Persona :'</span><span style=\"color:#BBBBBB\">, </span><span style=\"color:#FF7EDB\">persona</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n<p>Este ejercicio te proporcionar√° una pr√°ctica completa, aplicando m√©todos tanto en arrays como en objetos. ¬°Explora y experimenta con confianza en este emocionante viaje por JavaScript!</p>";

				const frontmatter = {"title":"Explorando Arrays y Objetos en JavaScript","description":"Aprenderemos sobre arrays y objetos  en Javascript as√≠ como su implementaci√≥n","pubDate":"Jan 29 2024","heroImage":"../img/img_blog/arrays.webp"};
				const file = "C:/Users/REDOUANE ESTC/Desktop/sofidev-portfolio-astro-sofidev/src/content/blog/arrays-objetos.md";
				const url = undefined;
				function rawContent() {
					return "**Explorando Arrays y Objetos en JavaScript: Desglose Pr√°ctico y M√©todos de Recorrido y Modificaci√≥n**\n\nEn esta ocasi√≥n veremos que son los arrays y objetos en JavaScript, explorando m√©todos para acceder a √≠ndices, recorrer, y modificar estas estructuras de datos vitales.\n\n![portada](/img/img_blog/arrays.webp)\n\n### **Arrays: Conjuntos Ordenados de Datos**\n\nSi una variable es como una cajita d√≥nde podemos almacenar un valor, el array se podr√≠a imaginar como un cofre en el c√∫al podemos almacenar conjuntos de datos que podemos manipular y explorar. Otra forma de entenderlos es como una canasta llena de frrutras:üçé,üçå,üçì.\n\n\n#### **Acceder a Elementos y Longitud de un Array**\n\n```javascript\n// Crear un array de frutas\nconst frutas = ['Manzana', 'Banana', 'Fresa'];\n\n// Acceder al primer elemento\nconsole.log(frutas[0]); // Salida: Manzana\n\n// Acceder a la longitud del array\nconsole.log(frutas.length); // Salida: 3\n```\n\nEn este ejemplo, hemos creado un array de frutas y accedido al primer elemento y a la longitud del array.\n\n#### **Modificar y A√±adir Elementos**\n\n```javascript\n// Modificar un elemento existente\nfrutas[1] = 'Uva'; // Ahora, el array es ['Manzana', 'Uva', 'Fresa']\n\n// A√±adir un nuevo elemento al final\nfrutas.push('Pi√±a'); // Ahora, el array es ['Manzana', 'Uva', 'Fresa', 'Pi√±a']\n```\n\nHemos modificado un elemento existente y a√±adido uno nuevo al final del array utilizando los m√©todos de acceso y modificaci√≥n.\n\n#### **Eliminar Elementos**\n\n```javascript\n// Eliminar el √∫ltimo elemento\nfrutas.pop(); // Ahora, el array es ['Manzana', 'Uva', 'Fresa']\n\n// Eliminar el primer elemento\nfrutas.shift(); // Ahora, el array es ['Uva', 'Fresa']\n```\n\nCon `pop` y `shift`, hemos eliminado el √∫ltimo y primer elemento del array, respectivamente.\n\n#### **M√©todo forEach: Explorando cada Elemento del Array**\n\n```javascript\n// Utilizar forEach para imprimir cada fruta\nfrutas.forEach(fruta => {\n  console.log(fruta);\n});\n```\n\nCon `forEach`, hemos recorrido y explorado cada elemento del array, imprimiendo cada fruta.\n\n#### **M√©todo map: Transformar cada Elemento del Array**\n\n```javascript\n// Crear un nuevo array con longitudes de cada fruta\nconst longitudesFrutas = frutas.map(fruta => fruta.length);\n\nconsole.log(longitudesFrutas); // Salida: [4, 5]\n```\n\nCon `map`, hemos creado un nuevo array transformando cada fruta en su longitud.\n\n#### **M√©todo filter: Filtrar Elementos basados en una Condici√≥n**\n\n```javascript\n// Crear un nuevo array con frutas que tienen m√°s de 3 letras\nconst frutasLargas = frutas.filter(fruta => fruta.length > 3);\n\nconsole.log(frutasLargas); // Salida: ['Uva', 'Fresa']\n```\n\nMediante `filter`, hemos obtenido un nuevo array con frutas que tienen m√°s de 3 letras.\n\n### **Objetos: Almacenando Datos con Clave-Valor**\n\nLos objetos en JavaScript nos permiten almacenar datos de manera estructurada utilizando claves √∫nicas.\n\n#### **Acceder a Propiedades y A√±adir Nuevas**\n\n```javascript\n// Crear un objeto de persona\nconst persona = {\n  nombre: 'Juan',\n  edad: 25,\n  ciudad: 'Barcelona'\n};\n\n// Acceder a la edad\nconsole.log(persona.edad); // Salida: 25\n\n// A√±adir una nueva propiedad\npersona.trabajo = 'Desarrollador'; // Ahora, el objeto tiene una nueva propiedad\n```\n\nCon los objetos, hemos accedido a una propiedad existente y a√±adido una nueva propiedad al objeto.\n\n#### **Modificar y Eliminar Propiedades**\n\n```javascript\n// Modificar el valor de una propiedad existente\npersona.edad = 26; // Ahora, la edad es 26\n\n// Eliminar una propiedad\ndelete persona.ciudad; // Ahora, el objeto no tiene la propiedad \"ciudad\"\n```\n\nHemos modificado el valor de una propiedad y eliminado otra del objeto utilizando m√©todos espec√≠ficos.\n\n#### **M√©todo Object.keys: Obtener las Claves del Objeto**\n\n```javascript\n// Obtener las claves del objeto\nconst clavesPersona = Object.keys(persona);\n\nconsole.log(clavesPersona); // Salida: ['nombre', 'edad', 'trabajo']\n```\n\nMediante `Object.keys`, hemos obtenido un array con las claves del objeto `persona`.\n\n#### **M√©todo Object.values: Obtener los Valores del Objeto**\n\n```javascript\n// Obtener los valores del objeto persona\nconst valoresPersona = Object.values(persona);\n\nconsole.log(valoresPersona); // Salida: ['Juan', 26, 'Desarrollador']\n```\n\nCon `Object.values`, hemos obtenido un array con los valores del objeto `persona`.\n\n### **Ejercicio Pr√°ctico: Aplicando M√©todos de Recorrido y Modificaci√≥n**\n\nVamos a combinar todos estos conceptos en un ejercicio:\n\n**Ejercicio:** Crea un array de frutas y un objeto de persona. Utiliza al menos tres m√©todos diferentes para modificar el array y el objeto, como a√±adir nuevas frutas, cambiar la edad de la persona y eliminar una propiedad del objeto.\n\n```javascript\n// Ejercicio: Agrega nuevasFrutas al array de frutas\nconst frutas = ['Manzana', 'Uva', 'Fresa'];\nconst nuevasFrutas = ['Kiwi', 'Melocot√≥n'];\n  // Tu c√≥digo aqu√≠: Utiliza m√©todos como push.\n\n\n\n\n\n//Edita la edad de Ana, a 31 a√±os\nconst persona = {\n  nombre: 'Ana',\n  edad: 30,\n  ciudad: 'Madrid'\n};\n\n// Tu c√≥digo aqu√≠:\n\n\n\n// Imprimir resultados\nconsole.log('Frutas:', frutas);\n\nconsole.log('Edad Persona :', persona);\n\n```\n\nEste ejercicio te proporcionar√° una pr√°ctica completa, aplicando m√©todos tanto en arrays como en objetos. ¬°Explora y experimenta con confianza en este emocionante viaje por JavaScript!";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":3,"slug":"arrays-conjuntos-ordenados-de-datos","text":"Arrays: Conjuntos Ordenados de Datos"},{"depth":4,"slug":"acceder-a-elementos-y-longitud-de-un-array","text":"Acceder a Elementos y Longitud de un Array"},{"depth":4,"slug":"modificar-y-a√±adir-elementos","text":"Modificar y A√±adir Elementos"},{"depth":4,"slug":"eliminar-elementos","text":"Eliminar Elementos"},{"depth":4,"slug":"m√©todo-foreach-explorando-cada-elemento-del-array","text":"M√©todo forEach: Explorando cada Elemento del Array"},{"depth":4,"slug":"m√©todo-map-transformar-cada-elemento-del-array","text":"M√©todo map: Transformar cada Elemento del Array"},{"depth":4,"slug":"m√©todo-filter-filtrar-elementos-basados-en-una-condici√≥n","text":"M√©todo filter: Filtrar Elementos basados en una Condici√≥n"},{"depth":3,"slug":"objetos-almacenando-datos-con-clave-valor","text":"Objetos: Almacenando Datos con Clave-Valor"},{"depth":4,"slug":"acceder-a-propiedades-y-a√±adir-nuevas","text":"Acceder a Propiedades y A√±adir Nuevas"},{"depth":4,"slug":"modificar-y-eliminar-propiedades","text":"Modificar y Eliminar Propiedades"},{"depth":4,"slug":"m√©todo-objectkeys-obtener-las-claves-del-objeto","text":"M√©todo Object.keys: Obtener las Claves del Objeto"},{"depth":4,"slug":"m√©todo-objectvalues-obtener-los-valores-del-objeto","text":"M√©todo Object.values: Obtener los Valores del Objeto"},{"depth":3,"slug":"ejercicio-pr√°ctico-aplicando-m√©todos-de-recorrido-y-modificaci√≥n","text":"Ejercicio Pr√°ctico: Aplicando M√©todos de Recorrido y Modificaci√≥n"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
