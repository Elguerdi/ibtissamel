const id = "arrays-objetos.md";
						const collection = "blog";
						const slug = "arrays-objetos";
						const body = "**Explorando Arrays y Objetos en JavaScript: Desglose Pr√°ctico y M√©todos de Recorrido y Modificaci√≥n**\n\nEn esta ocasi√≥n veremos que son los arrays y objetos en JavaScript, explorando m√©todos para acceder a √≠ndices, recorrer, y modificar estas estructuras de datos vitales.\n\n![portada](/img/img_blog/arrays.webp)\n\n### **Arrays: Conjuntos Ordenados de Datos**\n\nSi una variable es como una cajita d√≥nde podemos almacenar un valor, el array se podr√≠a imaginar como un cofre en el c√∫al podemos almacenar conjuntos de datos que podemos manipular y explorar. Otra forma de entenderlos es como una canasta llena de frrutras:üçé,üçå,üçì.\n\n\n#### **Acceder a Elementos y Longitud de un Array**\n\n```javascript\n// Crear un array de frutas\nconst frutas = ['Manzana', 'Banana', 'Fresa'];\n\n// Acceder al primer elemento\nconsole.log(frutas[0]); // Salida: Manzana\n\n// Acceder a la longitud del array\nconsole.log(frutas.length); // Salida: 3\n```\n\nEn este ejemplo, hemos creado un array de frutas y accedido al primer elemento y a la longitud del array.\n\n#### **Modificar y A√±adir Elementos**\n\n```javascript\n// Modificar un elemento existente\nfrutas[1] = 'Uva'; // Ahora, el array es ['Manzana', 'Uva', 'Fresa']\n\n// A√±adir un nuevo elemento al final\nfrutas.push('Pi√±a'); // Ahora, el array es ['Manzana', 'Uva', 'Fresa', 'Pi√±a']\n```\n\nHemos modificado un elemento existente y a√±adido uno nuevo al final del array utilizando los m√©todos de acceso y modificaci√≥n.\n\n#### **Eliminar Elementos**\n\n```javascript\n// Eliminar el √∫ltimo elemento\nfrutas.pop(); // Ahora, el array es ['Manzana', 'Uva', 'Fresa']\n\n// Eliminar el primer elemento\nfrutas.shift(); // Ahora, el array es ['Uva', 'Fresa']\n```\n\nCon `pop` y `shift`, hemos eliminado el √∫ltimo y primer elemento del array, respectivamente.\n\n#### **M√©todo forEach: Explorando cada Elemento del Array**\n\n```javascript\n// Utilizar forEach para imprimir cada fruta\nfrutas.forEach(fruta => {\n  console.log(fruta);\n});\n```\n\nCon `forEach`, hemos recorrido y explorado cada elemento del array, imprimiendo cada fruta.\n\n#### **M√©todo map: Transformar cada Elemento del Array**\n\n```javascript\n// Crear un nuevo array con longitudes de cada fruta\nconst longitudesFrutas = frutas.map(fruta => fruta.length);\n\nconsole.log(longitudesFrutas); // Salida: [4, 5]\n```\n\nCon `map`, hemos creado un nuevo array transformando cada fruta en su longitud.\n\n#### **M√©todo filter: Filtrar Elementos basados en una Condici√≥n**\n\n```javascript\n// Crear un nuevo array con frutas que tienen m√°s de 3 letras\nconst frutasLargas = frutas.filter(fruta => fruta.length > 3);\n\nconsole.log(frutasLargas); // Salida: ['Uva', 'Fresa']\n```\n\nMediante `filter`, hemos obtenido un nuevo array con frutas que tienen m√°s de 3 letras.\n\n### **Objetos: Almacenando Datos con Clave-Valor**\n\nLos objetos en JavaScript nos permiten almacenar datos de manera estructurada utilizando claves √∫nicas.\n\n#### **Acceder a Propiedades y A√±adir Nuevas**\n\n```javascript\n// Crear un objeto de persona\nconst persona = {\n  nombre: 'Juan',\n  edad: 25,\n  ciudad: 'Barcelona'\n};\n\n// Acceder a la edad\nconsole.log(persona.edad); // Salida: 25\n\n// A√±adir una nueva propiedad\npersona.trabajo = 'Desarrollador'; // Ahora, el objeto tiene una nueva propiedad\n```\n\nCon los objetos, hemos accedido a una propiedad existente y a√±adido una nueva propiedad al objeto.\n\n#### **Modificar y Eliminar Propiedades**\n\n```javascript\n// Modificar el valor de una propiedad existente\npersona.edad = 26; // Ahora, la edad es 26\n\n// Eliminar una propiedad\ndelete persona.ciudad; // Ahora, el objeto no tiene la propiedad \"ciudad\"\n```\n\nHemos modificado el valor de una propiedad y eliminado otra del objeto utilizando m√©todos espec√≠ficos.\n\n#### **M√©todo Object.keys: Obtener las Claves del Objeto**\n\n```javascript\n// Obtener las claves del objeto\nconst clavesPersona = Object.keys(persona);\n\nconsole.log(clavesPersona); // Salida: ['nombre', 'edad', 'trabajo']\n```\n\nMediante `Object.keys`, hemos obtenido un array con las claves del objeto `persona`.\n\n#### **M√©todo Object.values: Obtener los Valores del Objeto**\n\n```javascript\n// Obtener los valores del objeto persona\nconst valoresPersona = Object.values(persona);\n\nconsole.log(valoresPersona); // Salida: ['Juan', 26, 'Desarrollador']\n```\n\nCon `Object.values`, hemos obtenido un array con los valores del objeto `persona`.\n\n### **Ejercicio Pr√°ctico: Aplicando M√©todos de Recorrido y Modificaci√≥n**\n\nVamos a combinar todos estos conceptos en un ejercicio:\n\n**Ejercicio:** Crea un array de frutas y un objeto de persona. Utiliza al menos tres m√©todos diferentes para modificar el array y el objeto, como a√±adir nuevas frutas, cambiar la edad de la persona y eliminar una propiedad del objeto.\n\n```javascript\n// Ejercicio: Agrega nuevasFrutas al array de frutas\nconst frutas = ['Manzana', 'Uva', 'Fresa'];\nconst nuevasFrutas = ['Kiwi', 'Melocot√≥n'];\n  // Tu c√≥digo aqu√≠: Utiliza m√©todos como push.\n\n\n\n\n\n//Edita la edad de Ana, a 31 a√±os\nconst persona = {\n  nombre: 'Ana',\n  edad: 30,\n  ciudad: 'Madrid'\n};\n\n// Tu c√≥digo aqu√≠:\n\n\n\n// Imprimir resultados\nconsole.log('Frutas:', frutas);\n\nconsole.log('Edad Persona :', persona);\n\n```\n\nEste ejercicio te proporcionar√° una pr√°ctica completa, aplicando m√©todos tanto en arrays como en objetos. ¬°Explora y experimenta con confianza en este emocionante viaje por JavaScript!";
						const data = {title:"Explorando Arrays y Objetos en JavaScript",description:"Aprenderemos sobre arrays y objetos  en Javascript as√≠ como su implementaci√≥n",pubDate:new Date(1706482800000),heroImage:"../img/img_blog/arrays.webp"};
						const _internal = {
							type: 'content',
							filePath: "C:/Users/REDOUANE ESTC/Desktop/sofidev-portfolio-astro-sofidev/src/content/blog/arrays-objetos.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
