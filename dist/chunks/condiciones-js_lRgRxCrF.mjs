import { c as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_BeKtFF-M.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<p><strong>Tomando Decisiones en JavaScript: El Poder de las Estructuras de Control de Flujo</strong></p>\n<p>En el mundo de la programación, la capacidad de tomar decisiones es esencial para escribir código dinámico y adaptativo. En JavaScript, una de las herramientas clave para este propósito es la estructura de control de flujo <code>if</code>. Acompáñame mientras exploramos el uso de <code>if</code> y sus variantes.</p>\n<p><img src=\"/img/img_blog/sofiRed.webp\" alt=\"sofi\"></p>\n<h3 id=\"1-if-else-tomando-rutas-diferentes\">1. if-else: Tomando Rutas Diferentes</h3>\n<p>La estructura <code>if-else</code> nos permite ejecutar bloques de código diferentes según si una condición es verdadera o falsa. Veamos un ejemplo práctico:</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#FEDE5D\">let</span><span style=\"color:#FF7EDB\"> edad</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#2EE2FA\"> 18</span><span style=\"color:#BBBBBB\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">if</span><span style=\"color:#BBBBBB\"> (</span><span style=\"color:#FF7EDB\">edad</span><span style=\"color:#FEDE5D\"> >=</span><span style=\"color:#2EE2FA\"> 18</span><span style=\"color:#BBBBBB\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"Eres mayor de edad\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">} </span><span style=\"color:#FEDE5D\">else</span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"Eres menor de edad\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Aquí, el programa decide si una persona es mayor o menor de edad, imprimiendo el mensaje correspondiente. Es como tener dos caminos posibles en una encrucijada.</p>\n<h3 id=\"2-if-else-if-else-navegando-entre-opciones\">2. if-else if-else: Navegando Entre Opciones</h3>\n<p>Para situaciones más complejas con múltiples condiciones, podemos usar <code>else if</code> para evaluar casos adicionales:</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#FEDE5D\">let</span><span style=\"color:#FF7EDB\"> hora</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#2EE2FA\"> 14</span><span style=\"color:#BBBBBB\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">if</span><span style=\"color:#BBBBBB\"> (</span><span style=\"color:#FF7EDB\">hora</span><span style=\"color:#FEDE5D\"> &#x3C;</span><span style=\"color:#2EE2FA\"> 12</span><span style=\"color:#BBBBBB\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"Buenos días\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">} </span><span style=\"color:#FEDE5D\">else</span><span style=\"color:#FEDE5D\"> if</span><span style=\"color:#BBBBBB\"> (</span><span style=\"color:#FF7EDB\">hora</span><span style=\"color:#FEDE5D\"> &#x3C;</span><span style=\"color:#2EE2FA\"> 18</span><span style=\"color:#BBBBBB\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"Buenas tardes\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">} </span><span style=\"color:#FEDE5D\">else</span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"Buenas noches\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Aquí, el programa saluda según la hora del día, brindando mensajes personalizados para la mañana, tarde y noche.</p>\n<h3 id=\"3-operador-ternario-elegancia-en-una-línea\">3. Operador Ternario: Elegancia en una Línea</h3>\n<p>El operador ternario es una forma concisa de expresar estructuras <code>if-else</code> en una sola línea:</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#FEDE5D\">let</span><span style=\"color:#FF7EDB\"> esMayor</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF7EDB\"> edad</span><span style=\"color:#FEDE5D\"> >=</span><span style=\"color:#2EE2FA\"> 18</span><span style=\"color:#FEDE5D\"> ?</span><span style=\"color:#FF8B39\"> \"Mayor de edad\"</span><span style=\"color:#FEDE5D\"> :</span><span style=\"color:#FF8B39\"> \"Menor de edad\"</span><span style=\"color:#BBBBBB\">;</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF7EDB\">esMayor</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Este enfoque es especialmente útil cuando deseas asignar un valor basado en una condición de manera eficiente.</p>\n<h3 id=\"4-switch-una-alternativa-estructurada\">4. switch: Una Alternativa Estructurada</h3>\n<p><code>switch</code> es ideal cuando tienes múltiples casos y deseas ejecutar diferentes bloques de código según el valor de una expresión:</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#FEDE5D\">let</span><span style=\"color:#FF7EDB\"> diaDeLaSemana</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF8B39\"> \"Lunes\"</span><span style=\"color:#BBBBBB\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">switch</span><span style=\"color:#BBBBBB\"> (</span><span style=\"color:#FF7EDB\">diaDeLaSemana</span><span style=\"color:#BBBBBB\">) </span><span style=\"color:#72F1B8\">{</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">  case</span><span style=\"color:#FF8B39\"> \"Lunes\"</span><span style=\"color:#72F1B8\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">    console</span><span style=\"color:#72F1B8\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#72F1B8\">(</span><span style=\"color:#FF8B39\">\"Comienzo de la semana\"</span><span style=\"color:#72F1B8\">);</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">    break</span><span style=\"color:#72F1B8\">;</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">  case</span><span style=\"color:#FF8B39\"> \"Viernes\"</span><span style=\"color:#72F1B8\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">    console</span><span style=\"color:#72F1B8\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#72F1B8\">(</span><span style=\"color:#FF8B39\">\"¡Viernes, por fin!\"</span><span style=\"color:#72F1B8\">);</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">    break</span><span style=\"color:#72F1B8\">;</span></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">  default</span><span style=\"color:#72F1B8\">:</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">    console</span><span style=\"color:#72F1B8\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#72F1B8\">(</span><span style=\"color:#FF8B39\">\"Es otro día de la semana\"</span><span style=\"color:#72F1B8\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Esta construcción es como un menú de opciones, donde el código se dirige al caso correspondiente.</p>\n<h3 id=\"5-truthy-y-falsy-más-allá-de-lo-estrictamente-verdadero-o-falso\">5. Truthy y Falsy: Más Allá de lo Estrictamente Verdadero o Falso</h3>\n<p>En contextos booleanos, los valores pueden ser evaluados como <code>truthy</code> o <code>falsy</code>. Esto puede ser aprovechado en declaraciones <code>if</code> de la siguiente manera:</p>\n<pre class=\"astro-code synthwave-84\" style=\"background-color:#262335;color:#bbbbbb; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\" data-language=\"javascript\"><code><span class=\"line\"><span style=\"color:#FEDE5D\">let</span><span style=\"color:#FF7EDB\"> nombre</span><span style=\"color:#FFFFFFEE\"> =</span><span style=\"color:#FF8B39\"> \"\"</span><span style=\"color:#BBBBBB\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#FEDE5D\">if</span><span style=\"color:#BBBBBB\"> (</span><span style=\"color:#FF7EDB\">nombre</span><span style=\"color:#BBBBBB\">) {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"El nombre es truthy\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">} </span><span style=\"color:#FEDE5D\">else</span><span style=\"color:#BBBBBB\"> {</span></span>\n<span class=\"line\"><span style=\"color:#FF7EDB\">  console</span><span style=\"color:#BBBBBB\">.</span><span style=\"color:#36F9F6\">log</span><span style=\"color:#BBBBBB\">(</span><span style=\"color:#FF8B39\">\"El nombre es falsy\"</span><span style=\"color:#BBBBBB\">);</span></span>\n<span class=\"line\"><span style=\"color:#BBBBBB\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>Aquí, el programa determina si el nombre es considerado “truthy” o “falsy” en un contexto booleano.</p>\n<p>Al comprender estas estructuras de control de flujo en JavaScript, te equipas con poderosas herramientas para guiar el comportamiento de tu código. ¡Explora, experimenta y toma decisiones informadas en tus programas!</p>";

				const frontmatter = {"title":"Javascript: Condicionales","description":"Aprenderemos sobre condiciones en Javascript así como su implementación","pubDate":"Jan 18 2024","heroImage":"../img/img_blog/sofiRed.webp"};
				const file = "C:/Users/REDOUANE ESTC/Desktop/sofidev-portfolio-astro-sofidev/src/content/blog/condiciones-js.md";
				const url = undefined;
				function rawContent() {
					return "**Tomando Decisiones en JavaScript: El Poder de las Estructuras de Control de Flujo**\n\nEn el mundo de la programación, la capacidad de tomar decisiones es esencial para escribir código dinámico y adaptativo. En JavaScript, una de las herramientas clave para este propósito es la estructura de control de flujo `if`. Acompáñame mientras exploramos el uso de `if` y sus variantes.\n\n![sofi](/img/img_blog/sofiRed.webp)\n\n### 1. if-else: Tomando Rutas Diferentes\n\nLa estructura `if-else` nos permite ejecutar bloques de código diferentes según si una condición es verdadera o falsa. Veamos un ejemplo práctico:\n\n```javascript\nlet edad = 18;\n\nif (edad >= 18) {\n  console.log(\"Eres mayor de edad\");\n} else {\n  console.log(\"Eres menor de edad\");\n}\n```\n\nAquí, el programa decide si una persona es mayor o menor de edad, imprimiendo el mensaje correspondiente. Es como tener dos caminos posibles en una encrucijada.\n\n\n### 2. if-else if-else: Navegando Entre Opciones\n\nPara situaciones más complejas con múltiples condiciones, podemos usar `else if` para evaluar casos adicionales:\n\n```javascript\nlet hora = 14;\n\nif (hora < 12) {\n  console.log(\"Buenos días\");\n} else if (hora < 18) {\n  console.log(\"Buenas tardes\");\n} else {\n  console.log(\"Buenas noches\");\n}\n```\n\nAquí, el programa saluda según la hora del día, brindando mensajes personalizados para la mañana, tarde y noche.\n\n### 3. Operador Ternario: Elegancia en una Línea\n\nEl operador ternario es una forma concisa de expresar estructuras `if-else` en una sola línea:\n\n```javascript\nlet esMayor = edad >= 18 ? \"Mayor de edad\" : \"Menor de edad\";\nconsole.log(esMayor);\n```\n\nEste enfoque es especialmente útil cuando deseas asignar un valor basado en una condición de manera eficiente.\n\n### 4. switch: Una Alternativa Estructurada\n\n`switch` es ideal cuando tienes múltiples casos y deseas ejecutar diferentes bloques de código según el valor de una expresión:\n\n```javascript\nlet diaDeLaSemana = \"Lunes\";\n\nswitch (diaDeLaSemana) {\n  case \"Lunes\":\n    console.log(\"Comienzo de la semana\");\n    break;\n  case \"Viernes\":\n    console.log(\"¡Viernes, por fin!\");\n    break;\n  default:\n    console.log(\"Es otro día de la semana\");\n}\n```\n\nEsta construcción es como un menú de opciones, donde el código se dirige al caso correspondiente.\n\n### 5. Truthy y Falsy: Más Allá de lo Estrictamente Verdadero o Falso\n\nEn contextos booleanos, los valores pueden ser evaluados como `truthy` o `falsy`. Esto puede ser aprovechado en declaraciones `if` de la siguiente manera:\n\n```javascript\nlet nombre = \"\";\n\nif (nombre) {\n  console.log(\"El nombre es truthy\");\n} else {\n  console.log(\"El nombre es falsy\");\n}\n```\n\nAquí, el programa determina si el nombre es considerado \"truthy\" o \"falsy\" en un contexto booleano.\n\nAl comprender estas estructuras de control de flujo en JavaScript, te equipas con poderosas herramientas para guiar el comportamiento de tu código. ¡Explora, experimenta y toma decisiones informadas en tus programas!";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":3,"slug":"1-if-else-tomando-rutas-diferentes","text":"1. if-else: Tomando Rutas Diferentes"},{"depth":3,"slug":"2-if-else-if-else-navegando-entre-opciones","text":"2. if-else if-else: Navegando Entre Opciones"},{"depth":3,"slug":"3-operador-ternario-elegancia-en-una-línea","text":"3. Operador Ternario: Elegancia en una Línea"},{"depth":3,"slug":"4-switch-una-alternativa-estructurada","text":"4. switch: Una Alternativa Estructurada"},{"depth":3,"slug":"5-truthy-y-falsy-más-allá-de-lo-estrictamente-verdadero-o-falso","text":"5. Truthy y Falsy: Más Allá de lo Estrictamente Verdadero o Falso"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
